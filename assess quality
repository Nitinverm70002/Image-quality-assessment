PSNR (Peak Signal-to-Noise Ratio) and SSIM (Structural Similarity Index) between two images.

import cv2
import numpy as np
from skimage.metrics import structural_similarity as ssim

# Function to calculate PSNR (Peak Signal-to-Noise Ratio)
def calculate_psnr(imageA, imageB):
    mse = np.mean((imageA - imageB) ** 2)  # Mean Squared Error
    if mse == 0:
        return 100  # Perfect match (if images are identical)
    psnr = 10 * np.log10(255.0 ** 2 / mse)
    return psnr

# Function to calculate SSIM (Structural Similarity Index)
def calculate_ssim(imageA, imageB):
    # Convert images to grayscale (SSIM works better in grayscale)
    imageA_gray = cv2.cvtColor(imageA, cv2.COLOR_BGR2GRAY)
    imageB_gray = cv2.cvtColor(imageB, cv2.COLOR_BGR2GRAY)
    
    score, _ = ssim(imageA_gray, imageB_gray, full=True)
    return score

# Main function to read images and calculate metrics
if __name__ == "__main__":
    # Load the original and distorted images
    imageA = cv2.imread('input_images/imageA.jpg')
    imageB = cv2.imread('input_images/imageB.jpg')
    
    if imageA is None or imageB is None:
        print("Error: One or both images could not be loaded. Please check the file paths.")
        exit()

    # Calculate PSNR and SSIM
    psnr_value = calculate_psnr(imageA, imageB)
    ssim_value = calculate_ssim(imageA, imageB)

    # Display the results
    print(f"PSNR between the images: {psnr_value:.2f}")
    print(f"SSIM between the images: {ssim_value:.4f}")
